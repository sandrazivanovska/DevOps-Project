apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init
  namespace: devops-app
data:
  init-mongo.js: |
    db = db.getSiblingDB('devops_app');
    
    // Create collections
    db.createCollection('users');
    db.createCollection('products');
    db.createCollection('orders');
    
    // Create indexes
    db.users.createIndex({ "email": 1 }, { unique: true });
    db.products.createIndex({ "name": 1 });
    db.orders.createIndex({ "userId": 1 });
    
    print('MongoDB initialization completed');

---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: devops-app
type: Opaque
data:
  username: ZGV2b3BzX3VzZXI=  # devops_user (base64 encoded)
  password: ZGV2b3BzX3Bhc3N3b3Jk  # devops_password (base64 encoded)

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: devops-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: devops-app
  labels:
    app: mongodb
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_INITDB_DATABASE
          value: devops_app
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: mongodb-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-init
        configMap:
          name: mongodb-init
  volumeClaimTemplates:
  - metadata:
      name: mongodb-storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: gp2
