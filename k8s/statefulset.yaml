apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: devops-app
  labels:
    app: mongodb
spec:
  serviceName: mongodb-service
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_INITDB_DATABASE
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: init-script
        configMap:
          name: mongodb-init-script
  volumeClaimTemplates:
  - metadata:
      name: mongodb-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: devops-app
data:
  init-mongo.js: |
    // MongoDB initialization script
    db = db.getSiblingDB('devops_app');
    
    // Create collections
    db.createCollection('users');
    db.createCollection('products');
    db.createCollection('orders');
    db.createCollection('audit_logs');
    
    // Create indexes
    db.users.createIndex({ "email": 1 }, { unique: true });
    db.users.createIndex({ "username": 1 }, { unique: true });
    db.products.createIndex({ "name": "text", "description": "text" });
    db.products.createIndex({ "category": 1 });
    db.orders.createIndex({ "user_id": 1 });
    db.orders.createIndex({ "created_at": -1 });
    
    print('Database initialized successfully!');